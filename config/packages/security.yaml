security:
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
        
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    also:
                        password: $2y$13$GUTDiwD56F8QREYGc.mJr.Q5TwPZcxRCwQaln67zTPcvt.NA/GVYy
                        roles: 'ROLE_ADMIN'
                    kalika:
                        password: $2y$13$p14/W2bUYZrm4acbZc/N3OS8mqBLARh/oobCkHxjF6arVLJocVq42
                        roles: 'ROLE_ADMIN'
                    arta:
                        password: $2y$13$.fm0/qAmKrDY2nHUA5YJleLn.QDvrHPdbA8f4L/bjf5U5sSVYi56.
                        roles: 'ROLE_ADMIN'
                    ndeye:
                        password: $2y$13$D/1jxVJ9dgRxVheGQAdQruwx0dpxw5IX61YrjYTxd/nYr/77e78MC
                        roles: 'ROLE_ADMIN'
                    

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: in_memory
            form_login:
                login_path: login
                check_path: login
                default_target_path: /admin
                always_use_default_target_path: true
            logout: true
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_ADMIN }
        # - { path: ^/, roles: ROLE_ADMIN }
        # - { path: ^/api, roles: ROLE_ADMIN }
